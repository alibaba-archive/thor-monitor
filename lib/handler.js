// Generated by CoffeeScript 1.6.3
(function() {
  var Handler, async, client, config, handler,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  async = require('async');

  client = require('./client.js');

  config = require('./config');

  Handler = (function() {
    function Handler() {
      this.exception = __bind(this.exception, this);
    }

    Handler.prototype.exception = function(err, clu, callback) {
      var _err, _process;
      if (callback == null) {
        callback = function() {};
      }
      _err = err.err;
      _process = err.process;
      return async.each(config.emails, function(to, next) {
        var email, _ref, _ref1;
        email = {
          to: to,
          subject: 'Crash Mail',
          params: {
            date: new Date,
            stack: _err.stack,
            message: _err.message,
            pid: _process.process.pid,
            name: (_ref = _process.pm2_env) != null ? _ref.name : void 0,
            pmId: (_ref1 = _process.pm2_env) != null ? _ref1.pm_id : void 0,
            prc: JSON.stringify(_process, null, 2)
          },
          template: 'crashmail'
        };
        return client.call('email.send', email, next);
      }, callback);
    };

    return Handler;

  })();

  handler = new Handler;

  handler.Handler = Handler;

  module.exports = handler;

}).call(this);
